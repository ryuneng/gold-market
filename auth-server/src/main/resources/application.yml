# 1. 기본값 프로파일
server:
  port: ${SERVER_PORT}

spring:
  profiles:
    default: local # (프로파일 기본값 로컬로 지정)

  application:
    name: auth-server

  # .env import
  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: none
      naming:
        use-new-id-generator-mappings: false
    show-sql: true
    properties:
      hibernate:
        id:
          new_generator_mappings: true
        format_sql: true
      dialect: org.hibernate.dialect.MariaDBDialect

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

# 2. 로컬용 프로파일 (보통 배포 전 초기 개발 단계에 사용)
---
spring:
  config:
    activate:
      on-profile: local # 프로파일명

  jpa:
    hibernate:
      ddl-auto: create # 서버 실행 시 DB의 모든 테이블 삭제 후 재생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true # (2.5~) Hibernate 초기화 이후 data.sql 실행

  sql:
    init:
      mode: always # 서버 실행 시 data.sql 파일 항상 실행

grpc:
  server:
    port: ${GRPC_PORT}
    security:
      enabled: false

# 3. 테스트 실행 전용 프로파일
---
spring:
  config:
    activate:
      on-profile: test # 프로파일명 (@ActiveProfiles("test") 어노테이션을 부착한 테스트 클래스만 테스트 환경으로 실행)

  datasource:
    url: jdbc:mariadb://${DB_HOST}:${DB_TEST_PORT}:${DB_PORT}/${DB_NAME}_test
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create # 테스트 실행 시 DB의 모든 테이블 삭제 후 재생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  sql:
    init:
      mode: never # 테스트 실행 시 data.sql 파일 실행하지 않음
